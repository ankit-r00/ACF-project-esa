<?phpfunction cookie_auth(){	$logout_url = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}";	//soap_integration();      // call Soap Api	$home = home_url()."/?logout";	if ($logout_url == $home) {		unset( $_COOKIE['Token'] );                                 //Delete Cookie		setcookie("Token","",time()-3600, "/", ".esaweb.org");		unset( $_COOKIE['PTAuth'] );                                //Delete Cookie		setcookie("PTAuth","",time()-3600, "/", ".esaweb.org");		wp_redirect( home_url() );		exit;	}	if ($_COOKIE['Token'] && $_COOKIE['PTAuth'])	{		if(!is_user_logged_in())		{			custom_login();                                       //Custom Login function		}	}	elseif(is_user_logged_in()){                                // Check user object has not got subscriber role		global $current_user;                                   // Use global		get_current_user();                                     // Make sure global is set, if not set it.		if (  user_can( $current_user, "subscriber" ) ){        // Check user object has not got subscriber role			wp_logout();                                        // Logout user			wp_redirect( home_url() );			exit;		}	}else	{		private_pages();                          //Check Private pages	}}add_action('init','cookie_auth');////-------------/////// custom login ///////-------------////function custom_login() {	$creds =array(			'user_login'    => 'Members',			'user_password' => 'Mqj*vQ)RkAvyTZWSlOAKngZv',			'remember'      => false	);	$user = wp_signon( $creds, false );             // automate login	wp_set_current_user($user->ID);                 //set current user	wp_set_auth_cookie($user->ID, true, false );    //set cookie authentication	do_action( 'wp_login', 'Members' );	wp_redirect(home_url());}////-----------------------/////// redirect private pages ///////----------------------////function private_pages(){	if (!is_user_logged_in()) {		global $wpdb;		$slug       = basename( $_SERVER['REQUEST_URI'] );		$query      = 'SELECT * FROM esa_posts WHERE post_name = "' . $slug . '" LIMIT 1';		$page_query = $wpdb->get_results( $query, OBJECT );		$private    = ( is_object( $page_query[0] ) && $page_query[0]->post_status == 'private' );		?>		<?php if ( $private ) {			$url = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}";			// echo $url;			$return_url ="https://members.esaweb.org/Home/Sign-In?returnurl=$url";			wp_redirect( $return_url );			die();		}	}}//function soap_integration() {       //SOAP API INTEGRATION FUNCTION//  $return_url = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}";;//  $wsdl       = "https://membersstage.esaweb.org/Home/Sign-In?returnurl='$return_url'";//  $client     = new SoapClient($wsdl);  // The trace param will show you errors stack// print_r($client->__getFunctions());//  print_r($client);//  die();// // web service input params//  $request_param = array(//      "Username" => "jan@none.com",//      "password" => "jftest1",//      "return_url" => $return_url,//  );//  try {//    $responce_param = $client->AuthenticateToken($request_param);//    //$responce_param = $client->call( "AuthenticateToken", $request_param ); // Alternative way to call soap method//  } catch ( Exception $e ) {//    echo "<h2>Exception Error!</h2>";//    echo $e->getMessage();//  }//  print_r($responce_param);// }//}